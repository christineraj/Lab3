---
title: "Lab10"
author: "Christine Raj"
format:
  html:
    embed-resources: true
editor: visual
---

## Libraries

```{r}
library(RSQLite)
library(DBI)
```

## Downloading Data

```{r}
# Initialize a temporary in memory database
con <- dbConnect(SQLite(), ":memory:")

# Download tables
actor <- read.csv("https://raw.githubusercontent.com/ivanceras/sakila/master/csv-sakila-db/actor.csv")
rental <- read.csv("https://raw.githubusercontent.com/ivanceras/sakila/master/csv-sakila-db/rental.csv")
customer <- read.csv("https://raw.githubusercontent.com/ivanceras/sakila/master/csv-sakila-db/customer.csv")
payment <- read.csv("https://raw.githubusercontent.com/ivanceras/sakila/master/csv-sakila-db/payment_p2007_01.csv")

# Copy data.frames to database
dbWriteTable(con, "actor", actor)
dbWriteTable(con, "rental", rental)
dbWriteTable(con, "customer", customer)
dbWriteTable(con, "payment", payment)

dbListTables(con)
```

## Exercise 1

```{sql connection=con}
SELECT actor_id, first_name, last_name
FROM actor
ORDER by last_name, first_name
```

```         
```

## Exercise 2

```{sql connection=con}
SELECT actor_id, first_name, last_name
FROM actor
WHERE last_name IN ('WILLIAMS', 'DAVIS')
```

## Exercise 3

```{sql connection=con}
SELECT DISTINCT rental_id
FROM rental
WHERE date(rental_date) = '2005-07-05'
```

## Exercise 4.1

```{sql connection=con}
SELECT *
FROM payment
WHERE amount IN (1.99, 7.99, 9.99)
```

## Exercise 4.2

```{sql connection=con}
SELECT *
FROM payment
WHERE amount >5
```

## Exercise 4.3

```{sql connection=con}
SELECT *
FROM payment
WHERE amount >5 AND amount <8
```

## Exercise 5

```{sql connection=con}
SELECT payment_id, amount
FROM payment
  INNER JOIN customer
WHERE last_name IN ('DAVIS')

```

## Exercise 6.1

```{sql connection=con}
SELECT COUNT(*)
FROM rental
```

## Exercise 6.2

```{sql connection=con}
SELECT COUNT(*), customer_id
FROM rental
GROUP BY customer_id

```

## Exercise 6.3

```{sql connection=con}
SELECT COUNT(*), customer_id
FROM rental
GROUP BY customer_id
ORDER BY COUNT(*) DESC
```

## Exercise 6.4

```{sql connection=con}
SELECT COUNT(*), customer_id
FROM rental
GROUP BY customer_id
HAVING COUNT(*) >40
ORDER BY COUNT(*) DESC

```

## Exercise 7

```{sql connection=con}
SELECT MAX(amount), MIN(amount), AVG(amount), SUM(amount)
FROM payment

```

## Exercise 7.1

```{sql connection=con}
SELECT customer_id, MAX(amount), MIN(amount), AVG(amount), SUM(amount)
FROM payment
GROUP BY customer_id
```

## Exercise 7.2

```{sql connection=con}
SELECT customer_id, MAX(amount), MIN(amount), AVG(amount), SUM(amount)
FROM payment
GROUP BY customer_id
HAVING COUNT(customer_id) > 5
```

```{r}
dbDisconnect(con)

```
